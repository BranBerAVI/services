AMQP_URI: ${RABBIT_PROTOCOL:amqp}://${RABBIT_USER:guest}:${RABBIT_PASSWORD:guest}@${RABBIT_HOST:localhost}:${RABBIT_PORT:5672}/
HEARTBEAT: ${RABBIT_HEARTBEAT:60}
KEYWORDS:
  c: ["bool", "char", "const", "extern", "false", "float", "for", "if", "int", "long", "namespace", "new", "operator", "private", "protected", "sizeof", "static", "struct", "switch", "template", "throw", "typedef", "typename", "union", "unsigned", "virtual", "volatile"]
  c++: ["bool", "char", "const", "extern", "false", "float", "for", "if", "int", "long", "namespace", "new", "operator", "private", "protected", "sizeof", "static", "struct", "switch", "template", "throw", "typedef", "typename", "union", "unsigned", "virtual", "volatile"]
  java: ["abstract", "assert", "boolean", "break", "byte", "case", "catch", "char", "class", "const", "continue", "default", "do", "double", "else", "enum", "extends", "final", "finally", "float", "for", "goto", "if", "implements", "import", "instanceof", "int", "interface", "long", "native", "new", "package", "private", "protected", "public", "return", "short", "static", "strictfp", "super", "switch", "synchronized", "this", "throw", "throws", "transient", "try", "void", "volatile", "while"]
  python: ["and", "as", "assert", "async", "await", "break", "class", "continue", "def", "del", "elif", "else", "except", "False", "finally", "for", "from", "global", "if", "import", "in", "is", "lambda", "None", "nonlocal", "not", "or", "pass", "raise", "return", "True", "try", "while", "with", "yield"] 
LOGGING:
  version: 1
  disable_existing_loggers: False
  formatters:
    simple:
      format: '%(asctime)s - %(name)s - %(levelname)s - %(message)s'
  handlers:
    console:
      class: logging.StreamHandler
      level: DEBUG
      formatter: simple
  loggers:
    keywrd:
      level: DEBUG
      handlers: [console]
      propagate: false
  root:
    level: ERROR
    handlers: [console]
